#!/usr/bin/env python3

from __future__ import annotations

import logging
import logging.config

from vulnerabilitylookup.default import AbstractManager, get_config
from vulnerabilitylookup.feeders.tailscale import Tailscale

logging.config.dictConfig(get_config('logging'))


class TailscaleImporter(AbstractManager):

    def __init__(self, loglevel: int | None=None) -> None:
        super().__init__(loglevel)
        self.script_name = 'tailscale_importer'
        self.tailscale = Tailscale()

    def _to_run_forever(self) -> None:
        self.tailscale.update(self.shutdown_requested)


def main() -> None:
    ti = TailscaleImporter()
    ti.run(sleep_in_sec=3600)


if __name__ == '__main__':
    main()
