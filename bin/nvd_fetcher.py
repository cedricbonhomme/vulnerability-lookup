#!/usr/bin/env python3

from __future__ import annotations

import logging
import logging.config

from vulnerabilitylookup.default import AbstractManager, get_config
from vulnerabilitylookup.feeders.nvd import NVD

logging.config.dictConfig(get_config("logging"))


class NVDFetcher(AbstractManager):
    def __init__(self, loglevel: int | None = None) -> None:
        super().__init__(loglevel)
        self.script_name = "nvd"
        self.fetcher = NVD()

    def _to_run_forever(self) -> None:
        self.fetcher.update()


def main() -> None:
    nm = NVDFetcher()
    nm.run(sleep_in_sec=3600)


if __name__ == "__main__":
    main()
