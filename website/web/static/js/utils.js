function formatMarkdownOutput() {
  // Add some Bootstrap CSS classes to elements generated from Markdown (lists, tables)
  const lists = document.querySelectorAll('.markdown-description ul');
  lists.forEach((list, index) => {
    list.classList.add('list-group');

    const listItems = list.querySelectorAll('li');
    listItems.forEach((li) => {
      li.classList.add('list-group-item');
    });
  });

  const olists = document.querySelectorAll('.markdown-description ol');
  olists.forEach((list, index) => {
    list.classList.add('list-group', 'list-group-numbered');

    const listItems = list.querySelectorAll('li');
    listItems.forEach((li) => {
      li.classList.add('list-group-item');
    });
  });

  const tables = document.querySelectorAll('.markdown-description table');
  tables.forEach((table, index) => {
    // Add basic boostrap class for tables
    table.classList.add('table', 'table-bordered');

    // Make the table responsive
    const responsiveDiv = document.createElement('div');
    responsiveDiv.classList.add('table-responsive');
    table.parentNode.insertBefore(responsiveDiv, table);
    responsiveDiv.appendChild(table);
  });
}


function findCVEIdentifiers(text) {
  // Regex pattern to match CVE identifiers (e.g., CVE-2021-34527)
  const cveRegex = /\bCVE-\d{4}-\d{4,7}\b/gi;

  // Find all matches
  const matches = text.match(cveRegex);

  // Return the array of matches or an empty array if none are found
  return matches || [];
}
